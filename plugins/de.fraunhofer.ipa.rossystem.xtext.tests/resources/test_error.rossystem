RosSystem { Name 'test_system'  RosComponents ( 
    ComponentInterface { name test_node 
    	RosPublishers{ RosPublisher "scan" { RefPublisher "test_pkg.test_node.test_node.scan"} } 
    	RosSubscribers{ RosSubscriber "power_state" { RefSubscriber "test_pkg.test_node.test_node.power_state"} } 
    	RosSrvServers{ RosServiceServer "setBool" { RefServer "test_pkg.test_node.test_node.setBool"} } 
    	RosSrvClients{ RosServiceClient "init" { RefClient "test_pkg.test_node.test_node.init"} } 
    	RosParameters{ RosParameter "string_test" { RefParameter "test_pkg.test_node.test_node.string_test"}, 
    		RosParameter "bool_tets" { RefParameter "test_pkg.test_node.test_node.bool_tets"}, 
    		RosParameter "array_tets" { RefParameter "test_pkg.test_node.test_node.array_tets"}, 
    		RosParameter "base64_test" { RefParameter "test_pkg.test_node.test_node.base64_test"}, 
    		RosParameter "double_test" { RefParameter "test_pkg.test_node.test_node.double_test"}, 
    		RosParameter "int_test" { RefParameter "test_pkg.test_node.test_node.int_test"}, 
    		RosParameter "list_test" { RefParameter "test_pkg.test_node.test_node.list_test"} 
    	}
    } , ComponentInterface { name test_node2 NameSpace test2 
    	RosPublishers { RosPublisher "test2/scan" { ns test2 RefPublisher "test_pkg.test_node.test_node.scan" } } 
    	RosSubscribers { RosSubscriber "test2/power_state" { ns test2 RefSubscriber "test_pkg.test_node.test_node.power_state" } } 
    	RosSrvServers { RosServiceServer "test2/setBool" { ns test2 RefServer "test_pkg.test_node.test_node.setBool" } } 
    	RosSrvClients { RosServiceClient "test2/init" { ns test2 RefClient "test_pkg.test_node.test_node.init" } } 
    	RosParameters { RosParameter "test2/string_test" { ns test2 RefParameter "test_pkg.test_node.test_node.string_test" } , 
    		RosParameter "test2/bool_tets" { ns test2 RefParameter "test_pkg.test_node.test_node.bool_tets" } , 
    		RosParameter "test2/array_tets" { ns test2 RefParameter "test_pkg.test_node.test_node.array_tets" } , 
    		RosParameter "test2/base64_test" { ns test2 RefParameter "test_pkg.test_node.test_node.base64_test" } , 
    		RosParameter "test2/double_test" { ns test2 RefParameter "test_pkg.test_node.test_node.double_test" } , 
    		RosParameter "test2/int_test" { ns test2 RefParameter "test_pkg.test_node.test_node.int_test" } , 
    		RosParameter "test2/list_test" { ns test2 RefParameter "test_pkg.test_node.test_node.list_test" }
    	}
    } , ComponentInterface { name test_nodea 
    	RosPublishers { RosPublisher power_state { RefPublisher "test_pkg.test_node.test_node.power_state" } } 
    	RosSubscribers { RosSubscriber scan { RefSubscriber "test_pkg.test_node.test_node.scan" } } 
    	RosSrvServers { RosServiceServer init { RefServer "test_pkg.test_node.test_node.init" } } 
    	RosSrvClients { RosServiceClient SetBool { RefClient "test_pkg.test_node.test_node.SetBool" } }
    } ) TopicConnections { 
    	TopicConnection scan { From ( "test_node.scan" ) To ( "test_node.power_state" ) } , 
    	TopicConnection power_state { From ( "test_nodea.power_state" ) To ( "test_node.power_state" ) }
    } ServiceConnections { ServiceConnection init { From ( "test_nodea.init" ) To "test_nodea.SetBool" } }
       Parameters { 
		Parameter { name param1 type String value "hello"},
		Parameter {name list_test type List {Integer,Integer,String} value {1,2,a}},
		Parameter {name array_test type Array { type Integer } value {1,3}},
		
		Parameter {name struc_test type Struct 
			{first_element Integer {default 7 },
			third_element String } value { 
				{first_element {value 8}}, 
				{third_element {value dsd}}} 
			} 
		} 
     }
